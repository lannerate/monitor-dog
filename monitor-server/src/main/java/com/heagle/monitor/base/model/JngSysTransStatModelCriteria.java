package com.heagle.monitor.base.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class JngSysTransStatModelCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public JngSysTransStatModelCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andGuidIsNull() {
            addCriterion("jngSysTransStat.GUID is null");
            return (Criteria) this;
        }

        public Criteria andGuidIsNotNull() {
            addCriterion("jngSysTransStat.GUID is not null");
            return (Criteria) this;
        }

        public Criteria andGuidEqualTo(String value) {
            addCriterion("jngSysTransStat.GUID =", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidNotEqualTo(String value) {
            addCriterion("jngSysTransStat.GUID <>", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidGreaterThan(String value) {
            addCriterion("jngSysTransStat.GUID >", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidGreaterThanOrEqualTo(String value) {
            addCriterion("jngSysTransStat.GUID >=", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidLessThan(String value) {
            addCriterion("jngSysTransStat.GUID <", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidLessThanOrEqualTo(String value) {
            addCriterion("jngSysTransStat.GUID <=", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidLike(String value) {
            addCriterion("jngSysTransStat.GUID like", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidNotLike(String value) {
            addCriterion("jngSysTransStat.GUID not like", value, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidIn(List<String> values) {
            addCriterion("jngSysTransStat.GUID in", values, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidNotIn(List<String> values) {
            addCriterion("jngSysTransStat.GUID not in", values, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidBetween(String value1, String value2) {
            addCriterion("jngSysTransStat.GUID between", value1, value2, "guid");
            return (Criteria) this;
        }

        public Criteria andGuidNotBetween(String value1, String value2) {
            addCriterion("jngSysTransStat.GUID not between", value1, value2, "guid");
            return (Criteria) this;
        }

        public Criteria andTransTypeIsNull() {
            addCriterion("jngSysTransStat.TRANS_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andTransTypeIsNotNull() {
            addCriterion("jngSysTransStat.TRANS_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andTransTypeEqualTo(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE =", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeNotEqualTo(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE <>", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeGreaterThan(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE >", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeGreaterThanOrEqualTo(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE >=", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeLessThan(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE <", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeLessThanOrEqualTo(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE <=", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeLike(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE like", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeNotLike(String value) {
            addCriterion("jngSysTransStat.TRANS_TYPE not like", value, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeIn(List<String> values) {
            addCriterion("jngSysTransStat.TRANS_TYPE in", values, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeNotIn(List<String> values) {
            addCriterion("jngSysTransStat.TRANS_TYPE not in", values, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeBetween(String value1, String value2) {
            addCriterion("jngSysTransStat.TRANS_TYPE between", value1, value2, "transType");
            return (Criteria) this;
        }

        public Criteria andTransTypeNotBetween(String value1, String value2) {
            addCriterion("jngSysTransStat.TRANS_TYPE not between", value1, value2, "transType");
            return (Criteria) this;
        }

        public Criteria andTransStatCountIsNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT is null");
            return (Criteria) this;
        }

        public Criteria andTransStatCountIsNotNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT is not null");
            return (Criteria) this;
        }

        public Criteria andTransStatCountEqualTo(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT =", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountNotEqualTo(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT <>", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountGreaterThan(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT >", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountGreaterThanOrEqualTo(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT >=", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountLessThan(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT <", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountLessThanOrEqualTo(Long value) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT <=", value, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountIn(List<Long> values) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT in", values, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountNotIn(List<Long> values) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT not in", values, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountBetween(Long value1, Long value2) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT between", value1, value2, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatCountNotBetween(Long value1, Long value2) {
            addCriterion("jngSysTransStat.TRANS_STAT_COUNT not between", value1, value2, "transStatCount");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalIsNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL is null");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalIsNotNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL is not null");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalEqualTo(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL =", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalNotEqualTo(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL <>", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalGreaterThan(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL >", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalGreaterThanOrEqualTo(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL >=", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalLessThan(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL <", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalLessThanOrEqualTo(Integer value) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL <=", value, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalIn(List<Integer> values) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL in", values, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalNotIn(List<Integer> values) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL not in", values, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalBetween(Integer value1, Integer value2) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL between", value1, value2, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatIntervalNotBetween(Integer value1, Integer value2) {
            addCriterion("jngSysTransStat.TRANS_STAT_INTERVAL not between", value1, value2, "transStatInterval");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeIsNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_TIME is null");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeIsNotNull() {
            addCriterion("jngSysTransStat.TRANS_STAT_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeEqualTo(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME =", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME <>", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME >", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME >=", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeLessThan(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME <", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME <=", value, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeIn(List<Date> values) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME in", values, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME not in", values, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME between", value1, value2, "transStatTime");
            return (Criteria) this;
        }

        public Criteria andTransStatTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("jngSysTransStat.TRANS_STAT_TIME not between", value1, value2, "transStatTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table JNG_SYS_TRANS_LIST_STAT
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}